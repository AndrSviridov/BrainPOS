import importlib
import os
import sys
from pathlib import Path

print("üõ† –¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ smart_pos_agent\n")

# –î–æ–±–∞–≤–ª—è–µ–º smart_pos_agent –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent / "smart_pos_agent"))

# –ë–ª–æ–∫ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
print("[1] –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π:")
modules = ["core.diagnostics", "core.monitor", "gui.assistant_ui"]
for module in modules:
    try:
        importlib.import_module(module)
        print(f"  ‚úÖ {module} ‚Äî OK")
    except Exception as e:
        print(f"  ‚ùå {module} ‚Äî –æ—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
print("\n[4] –ü—Ä–æ–≤–µ—Ä–∫–∞ smart_monitor.py:")
try:
    from core import smart_monitor
    if Path("smart_latest.txt").exists():
        print("  ‚úÖ smart_latest.txt –Ω–∞–π–¥–µ–Ω")
    else:
        print("  ‚ùå smart_latest.txt –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    print("  ‚úÖ smart_monitor –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
except Exception as e:
    print(f"  ‚ùå –û—à–∏–±–∫–∞ smart_monitor: {e}")

# –ë–ª–æ–∫ 2: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
print("\n[2] –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:")
try:
    from core.diagnostics import get_diagnostics_summary
    print(get_diagnostics_summary())
except Exception as e:
    print(f"  ‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")

# –ë–ª–æ–∫ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏
print("\n[3] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ LLM:")
try:
    import json
    config_path = Path("ai_assistant_config.json")
    if not config_path.exists():
        print("  ‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª ai_assistant_config.json –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    else:
        with config_path.open("r", encoding="utf-8") as f:
            config = json.load(f)
        llama_path = Path(config.get("llama_run_path", ""))
        model_path = Path(config.get("model_path", ""))
        if llama_path.exists():
            print(f"  ‚úÖ llama-run: {llama_path}")
        else:
            print(f"  ‚ùå llama-run –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {llama_path}")
        if model_path.exists():
            print(f"  ‚úÖ –ú–æ–¥–µ–ª—å GGUF: {model_path}")
        else:
            print(f"  ‚ùå –ú–æ–¥–µ–ª—å GGUF –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ –ø—É—Ç–∏: {model_path}")
        if llama_path.exists() and model_path.exists():
            print("  ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π.")
except Exception as e:
    print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")

print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")